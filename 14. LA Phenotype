14. LA Phenotype Formatting for GWAS
3/28/18

#Original LA dbGaP phenotype file found at: /home/wheelerlab1/Data/dbGaP_Prostate_prj_13579/phs000306.v4.pht001911.v1.p1.c1.MEC_Prostate_Cancer_JALA_Subject_Phenotypes.DS-CA-PUB_MDS.txt
#Phenotype File downloaded, then formatted into R so the columns were spaced evenly (may have to use Excel/Sheets to format – I uploaded it to Google sheets then redownloaded it into R)
Formatting done within RStudio:
#Named File “dbGaP_For_LA”
#Want to format phenotype file so only remaining columns (without their headers) are FID, IID, and status
#Using the dplyr package, an FID column was created
	df1 <- mutate(dbGaP_ForLA, FID = 0)
#Then the 3 columns were written to “phen”, also using dplyr
	Phen <- dplyr::select(df1, FID, geneva_id, status)
#The columns were removed by writing a new table under the file name “JL.phen”
	write.table(Phen, file = “JL.phen”, row.names = FALSE, col.names = FALSE, quote = FALSE)

#Files are now ready for GWAS with POP_filtered files



#NOTE: As stated in line 79 of the 15_GWAS Repo, the following was done after realizing there were 2 missing dbGap files needed for GWAS
#Missing 2 phenotype files found in the same directory: /home/wheelerlab1/Data/dbGaP_Prostate_prj_13579/
#Repeated the steps above with R, Excel/Sheets to format them properly...


#Mutate to add an FID column at the end of these plots
	> df2 <- mutate(dbGaP_For_LA_c2, FID = 0)
	> df5 <- mutate(dbGaP_For_LA_c5, FID = 0)

#Formatted so only 'FID IID status' remain
	> Phen2 <- dplyr::select(df2, FID, geneva_id, status)
	> Phen5 <- dplyr::select(df5, FID, geneva_id, status)

#Still need to figure out how to separate the Japanese from these files
#Use dplyr on the df tables:
	> DF1 <- dplyr::filter(df1, ethni == "L")
	> DF2 <- dplyr::filter(df2, ethni == "L")
	> DF5 <- dplyr::filter(df5, ethni == "L")
	#Only rows with Latino Phenotype data remains
	#Renamed the filtered files (without Japanese phenotypes) DF1, DF2, DF5
	
#Now repeat the above steps to format them into files
	> Phen1 <- dplyr::select(DF1, FID, geneva_id, status)
	> Phen2 <- dplyr::select(DF2, FID, geneva_id, status)
	> Phen5 <- dplyr::select(DF5, FID, geneva_id, status)
	
#Now I need to combine all 3 Phenotype files into one...dplyr bind_rows or dplyr intersect?
	#There are 2081 people, but when combining all observations of the phenotype files there are 2206...
	#Regardless, used R-bind to concatinate them together and wrote it to PhenTemp
	
	> PhenTemp <- rbind(Phen1, Phen2, Phen5)
	
#Wrote the new table to PhenTemp
	> write.table(PhenTemp, file = "PhenTemp", row.names = FALSE, col.names = FALSE, quote = FALSE)
	
	
#To finally prep the files for GWAS, they all need headers
  #Column headers added for "FID IID ProCan" - "ProCan" details the Case (1) vs Control (2)
	jack@wheelerlab1:~/px_prostate_cancer_LA/ImpREDO/Imputed_files/GWAS_Run$ echo -e "FID IID ProCan" | cat - PhenTemp > LA_PhenTemp.header
	jack@wheelerlab1:~/px_prostate_cancer_LA/ImpREDO/Imputed_files/GWAS_Run$ less -S PhenTemp.header 
			FID IID ProCan 
			0 231000471 1
			0 231000883 2
			0 231000905 1
			0 231001018 2
			0 231001106 1
			0 231001247 1
			0 231001329 1
			0 231001903 1
			0 231002008 2
			0 231002186 1
			0 231002191 1
			0 231002243 2
			0 231002262 2
			0 231002806 2
			0 231003256 1
			0 231003438 2
			0 231003804 1
			0 231003876 1
			0 231004184 2
			0 231004607 1
			0 231005089 2
			0 231005168 1
			0 231005399 2
			0 231005454 1
			0 231005459 1
			0 231005786 2
			0 231006042 2
			0 231006319 1
			0 231006465 1
	#Ready for GWAS
	
	
